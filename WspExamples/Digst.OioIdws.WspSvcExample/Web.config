<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
  </configSections>
  <system.web>
    <compilation debug="true" targetFramework="4.8" />
    <httpRuntime targetFramework="4.8" />
    <customErrors mode="Off" />
    <webServices>
      <serviceDescriptionFormatExtensionTypes>
        <add type="Digst.OioIdws.Wsp.Wsdl.Bindings.Policy,          Digst.OioIdws.Wsp.Wsdl" />
        <add type="Digst.OioIdws.Wsp.Wsdl.Bindings.PolicyReference, Digst.OioIdws.Wsp.Wsdl" />
      </serviceDescriptionFormatExtensionTypes>
    </webServices>
  </system.web>
  <system.serviceModel>
    <extensions>
      <bindingExtensions>
        <add name="SoapBinding" type="Digst.OioIdws.Soap.Bindings.SoapBindingCollectionElement, Digst.OioIdws.Soap" />
      </bindingExtensions>
      <behaviorExtensions>
        <add name="SoapBehavior" type="Digst.OioIdws.Soap.Behaviors.SoapServiceBehaviorExtensionElement, Digst.OioIdws.Soap" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <behavior name="SoapBehaviourConfiguration">
          <SoapBehavior />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="SoapServiceBehaviourConfiguration">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!--serviceCredentials specifies the certificate used for signing the response to the client-->
          <!--Setting useIdentityConfiguration to true enables WIF (System.IdentityModel configuration) and ensures that the specified service certificate is also used as decrypting key for decrypting the encrypted SAML assertion.-->
          <!--Setting useIdentityConfiguration to true in a service behavior did not work because it happens too late in the pipe line and the service certificate would not be set to be the decrypting key-->
          <serviceCredentials useIdentityConfiguration="true">
            <!--OIOIDWS.NET WSP - Test (funktionscertifikat)-->
            <serviceCertificate findValue="d738a7d146f07e02c16cf28dac11e742e4ce9582" storeLocation="CurrentUser" storeName="My" x509FindType="FindByThumbprint" />
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <SoapBinding>
        <!-- sendTimeout is set in order for long running tests being able to test expiration scenarios -->
        <!--HTTP:<binding name="SoapBindingConfiguration" useHttps="false" sendTimeout="00:15:00"/>-->
        <binding name="SoapBindingConfiguration" useHttps="true" sendTimeout="00:15:00" useSoap12="true" />
      </SoapBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="SoapServiceBehaviourConfiguration" name="Digst.OioIdws.WspSvcExample.HelloWorld">
        <endpoint address="https://kombitwsp12.azurewebsites.net/HelloWorld.svc" behaviorConfiguration="SoapBehaviourConfiguration" binding="SoapBinding" bindingConfiguration="SoapBindingConfiguration" contract="Digst.OioIdws.WspSvcExample.IHelloWorld" />
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.identityModel>
    <identityConfiguration>
      <!--audienceUris specifies this service and is used to check that the SAML token from KOMBIT STS is indeed issued to this service.-->
      <audienceUris>
        <add value="https://wsp.oioidws-net.dk" />
        <add value="http://wsp11.oioidws-net.dk/service/service/1" />
        <add value="http://wsp12.oioidws-net.dk/service/service/1" />
      </audienceUris>
      <!--issuerNameRegistry specifies the trusted certificate of the KOMBIT STS. Both thumbprint and Common Name must be specified.-->
      <!--Issuer certificate is embedded in the encrypted SAML assertion. Hence, it it does not need to be received out-of-band and placed in the certificate store-->
      <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <trustedIssuers>
          <add thumbprint="8081b09446a396ba0ff9b7159d07d8c90f7db9ae" name="sts.oioidws-net.dk" />
          <add thumbprint="0aa7a193f18d095f7e2ce09d892178c9682b7924" name="test-ekstern-adgangsstyring" />
        </trustedIssuers>
      </issuerNameRegistry>
      <!--The Saml2SecurityTokenHandler security token handler must be replacded by a custom that handles that the signing certificate reference is the id of the encrypted assertion-->
      <securityTokenHandlers>
        <remove type="System.IdentityModel.Tokens.Saml2SecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <add type="Digst.OioIdws.Wsp.SubjectConfirmationDataSupport.SubjectConfirmationDataSaml2SecurityTokenHandler, Digst.OioIdws.Wsp" />
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701;612;618" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008,40000,40008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </compilers>
  </system.codedom>
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="wcfTraceListener" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Information, ActivityTracing">
        <listeners>
          <add name="wcfTraceListener" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="wcfTraceListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="WCFTrace.svclog" />
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>
</configuration>